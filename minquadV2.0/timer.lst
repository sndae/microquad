
timer.o:     file format elf32-msp430


Disassembly of section .text:

00000000 <timer_set_interrupts>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	82 4f 00 00 	mov	r15,	&0x0000	
    interrupt_timer_B = func_timer_B;
   4:	82 4e 00 00 	mov	r14,	&0x0000	
}
   8:	30 41       	ret			

0000000a <timer_init>:

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	b2 40 d2 01 	mov	#466,	&0x0000	;#0x01d2
   e:	00 00 
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	b2 40 88 13 	mov	#5000,	&0x0000	;#0x1388
  14:	00 00 
    interrupt_timer_B = func_timer_B;   
}
  16:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  1a:	00 00 

  1c:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  20:	00 00 
void timer_init(void){
  22:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  26:	00 00 
    
  28:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  2c:	00 00 
    // timerB
  2e:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  32:	00 00 
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  38:	00 00 
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	f2 40 7e 00 	mov.b	#126,	&0x0000	;#0x007e
  56:	00 00 
    TBCCR2 = 0; 
  58:	f2 40 7e 00 	mov.b	#126,	&0x0000	;#0x007e
  5c:	00 00 
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00
    TBCCR6 = 0; 
    
  62:	b2 40 a1 0f 	mov	#4001,	&0x0000	;#0x0fa1
  66:	00 00 
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  68:	b2 40 e0 00 	mov	#224,	&0x0000	;#0x00e0
  6c:	00 00 
    
    // timerA
  6e:	b2 40 d2 01 	mov	#466,	&0x0000	;#0x01d2
  72:	00 00 
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	82 43 00 00 	mov	#0,	&0x0000	;r3 As==00

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	f2 d2 00 00 	bis.b	#8,	&0x0000	;r2 As==11

  7c:	f2 d2 00 00 	bis.b	#8,	&0x0000	;r2 As==11
    // display backlight
  80:	30 41       	ret			

00000082 <TIMERA1_ISR_HOOK>:
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  82:	0f 12       	push	r15		
  84:	0e 12       	push	r14		
  86:	0d 12       	push	r13		
  88:	0c 12       	push	r12		

    P2SEL |= 0x08;
  8a:	92 12 00 00 	call	&0x0000	
    P2DIR |= 0x08;
}

  8e:	b2 f0 fe ff 	and	#-2,	&0x0000	;#0xfffe
  92:	00 00 

  94:	3c 41       	pop	r12		
  96:	3d 41       	pop	r13		
  98:	3e 41       	pop	r14		
  9a:	3f 41       	pop	r15		
  9c:	00 13       	reti			

0000009e <TIMERB1_ISR_HOOK>:
// delay
interrupt (TIMERA1_VECTOR) TIMERA1_ISR_HOOK(void){
  9e:	0f 12       	push	r15		
  a0:	0e 12       	push	r14		
  a2:	0d 12       	push	r13		
  a4:	0c 12       	push	r12		

    if(&interrupt_timer_A != null){
  a6:	92 12 00 00 	call	&0x0000	
        interrupt_timer_A();
    }
    
  aa:	b2 f0 fe ff 	and	#-2,	&0x0000	;#0xfffe
  ae:	00 00 
    // apaga o flag da interrupt
  b0:	3c 41       	pop	r12		
  b2:	3d 41       	pop	r13		
  b4:	3e 41       	pop	r14		
  b6:	3f 41       	pop	r15		
  b8:	00 13       	reti			

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	01 11       	rra	r1		
   2:	01 25       	jz	$+516    	;abs 0x206
    interrupt_timer_B = func_timer_B;
   4:	0e 13       	reti			;return from interupt
   6:	0b 03       	mova	#2,	r11	;r3 As==10
}
   8:	0e 1b 0e 11 	.rpt	#14
				rrax	r14		

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   c:	01 12       	push	r1		
   e:	01 10       	rrc	r1		
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	06 00       	mova	@r0,	r6	
  12:	00 02       	bra	#4		;r2 As==10
  14:	2e 01 3f 0c 	mova	&0x10c3f,r14	
    interrupt_timer_B = func_timer_B;   
}
  18:	03 0e       	.word	0x0e03;	????	Illegal as address instr
  1a:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x0b3b(r11)

  1e:	27 0c 11 01 	mova	&0xc0111,r7	
void timer_init(void){
  22:	12 01       	mova	@r1+,	r2	
  24:	40 0a       	rlam.a	#3,	r0	
  26:	01 13       	reti			;return from interupt
    
  28:	00 00       	bra	@r0		
  2a:	03 05       	.word	0x0503;	????	Illegal as address instr
  2c:	00 03       	bra	#2		;r3 As==10
    // timerB
  2e:	0e 3a       	jl	$-994    	;abs 0xfc4c
  30:	0b 3b       	jl	$-488    	;abs 0xfe48
  32:	0b 49       	mov	r9,	r11	
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	13 02       	.word	0x0213;	????	Illegal as address instr
  36:	0a 00       	mova	@r0,	r10	
  38:	00 04       	bra	@r4		
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	15 00       	mova	#0x00000,r5	
  3c:	27 0c 00 00 	mova	&0xc0000,r7	
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  40:	05 0f       	mova	@r15,	r5	
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	00 0b       	bra	@r11		
  44:	0b 49       	mov	r9,	r11	
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	13 00       	.word	0x0013;	????	Illegal as address instr
  48:	00 06       	bra	@r6		
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	2e 00 3f 0c 	mova	&0x00c3f,r14	
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	03 0e       	.word	0x0e03;	????	Illegal as address instr
  50:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x0b3b(r11)
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  54:	27 0c 11 01 	mova	&0xc0111,r7	
    TBCCR2 = 0; 
  58:	12 01       	mova	@r1+,	r2	
  5a:	40 0a       	rlam.a	#3,	r0	
  5c:	00 00       	bra	@r0		
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	07 2e       	jc	$-1008   	;abs 0xfc6e
  60:	00 3f       	jmp	$-510    	;abs 0xfe62
    TBCCR6 = 0; 
    
  62:	0c 03       	mova	#2,	r12	;r3 As==10
  64:	0e 3a       	jl	$-994    	;abs 0xfc82
  66:	0b 3b       	jl	$-488    	;abs 0xfe7e
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  68:	0b 27       	jz	$-488    	;abs 0xfe80
  6a:	0c 11       	rra	r12		
  6c:	01 12       	push	r1		
    
    // timerA
  6e:	01 40       	mov	r0,	r1	
  70:	06 00       	mova	@r0,	r6	
  72:	00 08       	bra	@r8		
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	34 00 03 0e 	mova	0x0e03,	r4	;PC rel. 0x00e79

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	3a 0b 3b 05 	mova	1339(r11),r10	;0x053b(r11)

  7c:	87 40 0e 49 	mov	r0,	18702(r7);0x490e(r7)
    // display backlight
  80:	13 3f       	jmp	$-472    	;abs 0xfea8
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  82:	0c 3c       	jmp	$+26     	;abs 0x9c
  84:	0c 00       	mova	@r0,	r12	
  86:	00 09       	bra	@r9		
  88:	35 00 49 13 	mova	0x1349,	r5	;PC rel. 0x013d3

    P2SEL |= 0x08;
  8c:	00 00       	bra	@r0		
    P2DIR |= 0x08;
}

  8e:	0a 24       	jz	$+22     	;abs 0xa4
  90:	00 0b       	bra	@r11		
  92:	0b 3e       	jmp	$-1000   	;abs 0xfcaa

  94:	0b 03       	mova	#2,	r11	;r3 As==10
  96:	0e 00       	mova	@r0,	r14	
  98:	00 0b       	bra	@r11		
  9a:	34 00 03 0e 	mova	0x0e03,	r4	;PC rel. 0x00e9f
// delay
interrupt (TIMERA1_VECTOR) TIMERA1_ISR_HOOK(void){
  9e:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x0b3b(r11)
  a2:	49 13       	calla	r9		
  a4:	3f 0c 3c 0c 	mova	3132(r12),r15	;0x0c3c(r12)

    if(&interrupt_timer_A != null){
  a8:	00 00       	bra	@r0		
        interrupt_timer_A();
    }
    
  aa:	0c 34       	jge	$+26     	;abs 0xc4
  ac:	00 03       	bra	#2		;r3 As==10
  ae:	0e 3a       	jl	$-994    	;abs 0xfccc
    // apaga o flag da interrupt
  b0:	0b 3b       	jl	$-488    	;abs 0xfec8
  b2:	0b 49       	mov	r9,	r11	
  b4:	13 3f       	jmp	$-472    	;abs 0xfedc
  b6:	0c 02       	mova	#4,	r12	;r2 As==10
  b8:	0a 00       	mova	@r0,	r10	
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	15 04       	mova	@r4+,	r5	
   2:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	00 00       	bra	@r0		
}
   8:	00 00       	bra	@r0		

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	02 01       	mova	@r1,	r2	
   c:	00 00       	bra	@r0		
   e:	00 00       	bra	@r0		
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	01 00       	mova	@r0,	r1	
	...
    interrupt_timer_B = func_timer_B;   
}

  1e:	00 00       	bra	@r0		
  20:	00 02       	bra	#4		;r2 As==10
void timer_init(void){
  22:	01 00       	mova	@r0,	r1	
  24:	00 00       	bra	@r0		
  26:	00 01       	bra	@r1		
    
  28:	09 01       	mova	@r1,	r9	
  2a:	00 00       	bra	@r0		
  2c:	00 00       	bra	@r0		
    // timerB
  2e:	02 71       	subc	r1,	r2	
  30:	02 50       	add	r0,	r2	
  32:	00 00       	bra	@r0		
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	00 03       	bra	#2		;r3 As==10
  36:	00 00       	bra	@r0		
  38:	00 00       	bra	@r0		
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	01 09       	mova	@r9,	r1	
  3c:	52 00       	rrcm	#1,	r2	
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	00 00       	bra	@r0		
  40:	01 5f       	add	r15,	r1	
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	03 00       	.word	0x0003;	????	Illegal as address instr
  44:	00 00       	bra	@r0		
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	00 01       	bra	@r1		
  48:	09 52       	add	r2,	r9	
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	00 00       	bra	@r0		
  4c:	00 01       	bra	@r1		
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	5e 00       	rrcm	#1,	r14	
  50:	04 01       	mova	@r1,	r4	
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	05 02       	mova	#4,	r5	;r2 As==10
  54:	50 00       	rrcm	#1,	r0	
  56:	00 00       	bra	@r0		
    TBCCR2 = 0; 
  58:	06 01       	mova	@r1,	r6	
  5a:	00 00       	bra	@r0		
  5c:	00 00       	bra	@r0		
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	01 0e       	mova	@r14,	r1	
  60:	01 00       	mova	@r0,	r1	
    TBCCR6 = 0; 
    
  62:	00 00       	bra	@r0		
  64:	00 02       	bra	#4		;r2 As==10
  66:	71 02 07 01 	mova	r2,	263(r1)	;0x0107(r1)
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  6a:	00 00       	bra	@r0		
  6c:	00 00       	bra	@r0		
    
    // timerA
  6e:	01 37       	jge	$-508    	;abs 0xfe72
  70:	01 00       	mova	@r0,	r1	
  72:	00 00       	bra	@r0		
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	00 00       	bra	@r0		
  76:	00 00       	bra	@r0		

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	00 07       	bra	@r7		
  7a:	01 00       	mova	@r0,	r1	

  7c:	00 00       	bra	@r0		
  7e:	00 01       	bra	@r1		
    // display backlight
  80:	3f 01 00 00 	mova	0(r1),	r15	;0x0000(r1)
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  84:	00 00       	bra	@r0		
  86:	00 00       	bra	@r0		
  88:	00 00       	bra	@r0		

    P2SEL |= 0x08;
  8a:	08 00       	mova	@r0,	r8	
  8c:	00 00       	bra	@r0		
    P2DIR |= 0x08;
}

  8e:	00 02       	bra	#4		;r2 As==10
  90:	80 03 00 00 	bra	#0x30000	

  94:	00 00       	bra	@r0		
  96:	9c 00 00 00 	cmpa	#0x00000,r12	
  9a:	01 01       	mova	@r1,	r1	
  9c:	09 a1       	dadd	r1,	r9	
// delay
interrupt (TIMERA1_VECTOR) TIMERA1_ISR_HOOK(void){
  9e:	00 00       	bra	@r0		
  a0:	00 0a       	bra	@r10		
  a2:	01 08       	mova	@r8,	r1	
  a4:	00 00       	bra	@r0		

    if(&interrupt_timer_A != null){
  a6:	00 00       	bra	@r0		
  a8:	08 00       	mova	@r0,	r8	
        interrupt_timer_A();
    }
    
  aa:	00 00       	bra	@r0		
  ac:	00 02       	bra	#4		;r2 As==10
  ae:	88 03 00 00 	mova	#0x30000,r8	
    // apaga o flag da interrupt
  b2:	00 00       	bra	@r0		
  b4:	9c 00 00 00 	cmpa	#0x00000,r12	
  b8:	01 01       	mova	@r1,	r1	
  ba:	08 00       	mova	@r0,	r8	
  bc:	00 00       	bra	@r0		
  be:	00 02       	bra	#4		;r2 As==10
  c0:	a2 03 00 00 	adda	#0x30000,r2	
  c4:	00 00       	bra	@r0		
  c6:	9c 00 00 00 	cmpa	#0x00000,r12	
  ca:	01 01       	mova	@r1,	r1	
  cc:	08 00       	mova	@r0,	r8	
  ce:	00 00       	bra	@r0		
  d0:	00 02       	bra	#4		;r2 As==10
  d2:	a4 03 00 00 	adda	#0x30000,r4	
  d6:	00 00       	bra	@r0		
  d8:	9c 00 00 00 	cmpa	#0x00000,r12	
  dc:	01 01       	mova	@r1,	r1	
  de:	08 00       	mova	@r0,	r8	
  e0:	00 00       	bra	@r0		
  e2:	00 02       	bra	#4		;r2 As==10
  e4:	09 04       	mova	@r4,	r9	
  e6:	00 00       	bra	@r0		
  e8:	00 00       	bra	@r0		
  ea:	f0 00       	suba	r0,	r0	
  ec:	00 00       	bra	@r0		
  ee:	01 01       	mova	@r1,	r1	
  f0:	09 f5       	and	r5,	r9	
  f2:	00 00       	bra	@r0		
  f4:	00 0a       	bra	@r10		
  f6:	02 07       	mova	@r7,	r2	
  f8:	00 00       	bra	@r0		
  fa:	00 00       	bra	@r0		
  fc:	08 00       	mova	@r0,	r8	
  fe:	00 00       	bra	@r0		
 100:	00 02       	bra	#4		;r2 As==10
 102:	0b 04       	mova	@r4,	r11	
 104:	00 00       	bra	@r0		
 106:	00 00       	bra	@r0		
 108:	f0 00       	suba	r0,	r0	
 10a:	00 00       	bra	@r0		
 10c:	01 01       	mova	@r1,	r1	
 10e:	08 00       	mova	@r0,	r8	
 110:	00 00       	bra	@r0		
 112:	00 02       	bra	#4		;r2 As==10
 114:	0d 04       	mova	@r4,	r13	
 116:	00 00       	bra	@r0		
 118:	00 00       	bra	@r0		
 11a:	f0 00       	suba	r0,	r0	
 11c:	00 00       	bra	@r0		
 11e:	01 01       	mova	@r1,	r1	
 120:	08 00       	mova	@r0,	r8	
 122:	00 00       	bra	@r0		
 124:	00 02       	bra	#4		;r2 As==10
 126:	13 04       	.word	0x0413;	????	Illegal as address instr
 128:	00 00       	bra	@r0		
 12a:	00 00       	bra	@r0		
 12c:	f0 00       	suba	r0,	r0	
 12e:	00 00       	bra	@r0		
 130:	01 01       	mova	@r1,	r1	
 132:	08 00       	mova	@r0,	r8	
 134:	00 00       	bra	@r0		
 136:	00 02       	bra	#4		;r2 As==10
 138:	15 04       	mova	@r4+,	r5	
 13a:	00 00       	bra	@r0		
 13c:	00 00       	bra	@r0		
 13e:	f0 00       	suba	r0,	r0	
 140:	00 00       	bra	@r0		
 142:	01 01       	mova	@r1,	r1	
 144:	08 00       	mova	@r0,	r8	
 146:	00 00       	bra	@r0		
 148:	00 02       	bra	#4		;r2 As==10
 14a:	6f 04 00 00 	mova	r4,	&0xf0000
 14e:	00 00       	bra	@r0		
 150:	f0 00       	suba	r0,	r0	
 152:	00 00       	bra	@r0		
 154:	01 01       	mova	@r1,	r1	
 156:	08 00       	mova	@r0,	r8	
 158:	00 00       	bra	@r0		
 15a:	00 02       	bra	#4		;r2 As==10
 15c:	73 04       	.word	0x0473;	????	Illegal as address instr
 15e:	00 00       	bra	@r0		
 160:	00 00       	bra	@r0		
 162:	f0 00       	suba	r0,	r0	
 164:	00 00       	bra	@r0		
 166:	01 01       	mova	@r1,	r1	
 168:	08 00       	mova	@r0,	r8	
 16a:	00 00       	bra	@r0		
 16c:	00 02       	bra	#4		;r2 As==10
 16e:	75 04 00 00 	mova	r4,	0(r5)	;0x0000(r5)
 172:	00 00       	bra	@r0		
 174:	f0 00       	suba	r0,	r0	
 176:	00 00       	bra	@r0		
 178:	01 01       	mova	@r1,	r1	
 17a:	08 00       	mova	@r0,	r8	
 17c:	00 00       	bra	@r0		
 17e:	00 02       	bra	#4		;r2 As==10
 180:	77 04 00 00 	mova	r4,	0(r7)	;0x0000(r7)
 184:	00 00       	bra	@r0		
 186:	f0 00       	suba	r0,	r0	
 188:	00 00       	bra	@r0		
 18a:	01 01       	mova	@r1,	r1	
 18c:	08 00       	mova	@r0,	r8	
 18e:	00 00       	bra	@r0		
 190:	00 02       	bra	#4		;r2 As==10
 192:	79 04 00 00 	mova	r4,	0(r9)	;0x0000(r9)
 196:	00 00       	bra	@r0		
 198:	f0 00       	suba	r0,	r0	
 19a:	00 00       	bra	@r0		
 19c:	01 01       	mova	@r1,	r1	
 19e:	08 00       	mova	@r0,	r8	
 1a0:	00 00       	bra	@r0		
 1a2:	00 02       	bra	#4		;r2 As==10
 1a4:	7b 04 00 00 	mova	r4,	0(r11)	;0x0000(r11)
 1a8:	00 00       	bra	@r0		
 1aa:	f0 00       	suba	r0,	r0	
 1ac:	00 00       	bra	@r0		
 1ae:	01 01       	mova	@r1,	r1	
 1b0:	08 00       	mova	@r0,	r8	
 1b2:	00 00       	bra	@r0		
 1b4:	00 02       	bra	#4		;r2 As==10
 1b6:	7d 04 00 00 	mova	r4,	0(r13)	;0x0000(r13)
 1ba:	00 00       	bra	@r0		
 1bc:	f0 00       	suba	r0,	r0	
 1be:	00 00       	bra	@r0		
 1c0:	01 01       	mova	@r1,	r1	
 1c2:	08 00       	mova	@r0,	r8	
 1c4:	00 00       	bra	@r0		
 1c6:	00 02       	bra	#4		;r2 As==10
 1c8:	81 04 00 00 	mova	#0x40000,r1	
 1cc:	00 00       	bra	@r0		
 1ce:	f0 00       	suba	r0,	r0	
 1d0:	00 00       	bra	@r0		
 1d2:	01 01       	mova	@r1,	r1	
 1d4:	08 00       	mova	@r0,	r8	
 1d6:	00 00       	bra	@r0		
 1d8:	00 02       	bra	#4		;r2 As==10
 1da:	83 04       	.word	0x0483;	????	Illegal as address instr
 1dc:	00 00       	bra	@r0		
 1de:	00 00       	bra	@r0		
 1e0:	f0 00       	suba	r0,	r0	
 1e2:	00 00       	bra	@r0		
 1e4:	01 01       	mova	@r1,	r1	
 1e6:	08 00       	mova	@r0,	r8	
 1e8:	00 00       	bra	@r0		
 1ea:	00 02       	bra	#4		;r2 As==10
 1ec:	85 04 00 00 	mova	#0x40000,r5	
 1f0:	00 00       	bra	@r0		
 1f2:	f0 00       	suba	r0,	r0	
 1f4:	00 00       	bra	@r0		
 1f6:	01 01       	mova	@r1,	r1	
 1f8:	08 00       	mova	@r0,	r8	
 1fa:	00 00       	bra	@r0		
 1fc:	00 02       	bra	#4		;r2 As==10
 1fe:	87 04 00 00 	mova	#0x40000,r7	
 202:	00 00       	bra	@r0		
 204:	f0 00       	suba	r0,	r0	
 206:	00 00       	bra	@r0		
 208:	01 01       	mova	@r1,	r1	
 20a:	08 00       	mova	@r0,	r8	
 20c:	00 00       	bra	@r0		
 20e:	00 02       	bra	#4		;r2 As==10
 210:	89 04 00 00 	mova	#0x40000,r9	
 214:	00 00       	bra	@r0		
 216:	f0 00       	suba	r0,	r0	
 218:	00 00       	bra	@r0		
 21a:	01 01       	mova	@r1,	r1	
 21c:	08 00       	mova	@r0,	r8	
 21e:	00 00       	bra	@r0		
 220:	00 02       	bra	#4		;r2 As==10
 222:	8b 04 00 00 	mova	#0x40000,r11	
 226:	00 00       	bra	@r0		
 228:	f0 00       	suba	r0,	r0	
 22a:	00 00       	bra	@r0		
 22c:	01 01       	mova	@r1,	r1	
 22e:	08 00       	mova	@r0,	r8	
 230:	00 00       	bra	@r0		
 232:	00 02       	bra	#4		;r2 As==10
 234:	8d 04 00 00 	mova	#0x40000,r13	
 238:	00 00       	bra	@r0		
 23a:	f0 00       	suba	r0,	r0	
 23c:	00 00       	bra	@r0		
 23e:	01 01       	mova	@r1,	r1	
 240:	0b 00       	mova	@r0,	r11	
 242:	00 00       	bra	@r0		
 244:	00 01       	bra	@r1		
 246:	06 52       	add	r2,	r6	
 248:	00 00       	bra	@r0		
 24a:	00 01       	bra	@r1		
 24c:	01 0b       	mova	@r11,	r1	
 24e:	00 00       	bra	@r0		
 250:	00 00       	bra	@r0		
 252:	01 07       	mova	@r7,	r1	
 254:	52 00       	rrcm	#1,	r2	
 256:	00 00       	bra	@r0		
 258:	01 01       	mova	@r1,	r1	
 25a:	08 00       	mova	@r0,	r8	
 25c:	00 00       	bra	@r0		
 25e:	00 02       	bra	#4		;r2 As==10
 260:	80 03 00 00 	bra	#0x30000	
 264:	00 00       	bra	@r0		
 266:	9c 00 00 00 	cmpa	#0x00000,r12	
 26a:	01 01       	mova	@r1,	r1	
 26c:	08 00       	mova	@r0,	r8	
 26e:	00 00       	bra	@r0		
 270:	00 02       	bra	#4		;r2 As==10
 272:	88 03 00 00 	mova	#0x30000,r8	
 276:	00 00       	bra	@r0		
 278:	9c 00 00 00 	cmpa	#0x00000,r12	
 27c:	01 01       	mova	@r1,	r1	
 27e:	08 00       	mova	@r0,	r8	
 280:	00 00       	bra	@r0		
 282:	00 02       	bra	#4		;r2 As==10
 284:	a2 03 00 00 	adda	#0x30000,r2	
 288:	00 00       	bra	@r0		
 28a:	9c 00 00 00 	cmpa	#0x00000,r12	
 28e:	01 01       	mova	@r1,	r1	
 290:	08 00       	mova	@r0,	r8	
 292:	00 00       	bra	@r0		
 294:	00 02       	bra	#4		;r2 As==10
 296:	a4 03 00 00 	adda	#0x30000,r4	
 29a:	00 00       	bra	@r0		
 29c:	9c 00 00 00 	cmpa	#0x00000,r12	
 2a0:	01 01       	mova	@r1,	r1	
 2a2:	08 00       	mova	@r0,	r8	
 2a4:	00 00       	bra	@r0		
 2a6:	00 02       	bra	#4		;r2 As==10
 2a8:	09 04       	mova	@r4,	r9	
 2aa:	00 00       	bra	@r0		
 2ac:	00 00       	bra	@r0		
 2ae:	f0 00       	suba	r0,	r0	
 2b0:	00 00       	bra	@r0		
 2b2:	01 01       	mova	@r1,	r1	
 2b4:	08 00       	mova	@r0,	r8	
 2b6:	00 00       	bra	@r0		
 2b8:	00 02       	bra	#4		;r2 As==10
 2ba:	0b 04       	mova	@r4,	r11	
 2bc:	00 00       	bra	@r0		
 2be:	00 00       	bra	@r0		
 2c0:	f0 00       	suba	r0,	r0	
 2c2:	00 00       	bra	@r0		
 2c4:	01 01       	mova	@r1,	r1	
 2c6:	08 00       	mova	@r0,	r8	
 2c8:	00 00       	bra	@r0		
 2ca:	00 02       	bra	#4		;r2 As==10
 2cc:	0d 04       	mova	@r4,	r13	
 2ce:	00 00       	bra	@r0		
 2d0:	00 00       	bra	@r0		
 2d2:	f0 00       	suba	r0,	r0	
 2d4:	00 00       	bra	@r0		
 2d6:	01 01       	mova	@r1,	r1	
 2d8:	08 00       	mova	@r0,	r8	
 2da:	00 00       	bra	@r0		
 2dc:	00 02       	bra	#4		;r2 As==10
 2de:	13 04       	.word	0x0413;	????	Illegal as address instr
 2e0:	00 00       	bra	@r0		
 2e2:	00 00       	bra	@r0		
 2e4:	f0 00       	suba	r0,	r0	
 2e6:	00 00       	bra	@r0		
 2e8:	01 01       	mova	@r1,	r1	
 2ea:	08 00       	mova	@r0,	r8	
 2ec:	00 00       	bra	@r0		
 2ee:	00 02       	bra	#4		;r2 As==10
 2f0:	15 04       	mova	@r4+,	r5	
 2f2:	00 00       	bra	@r0		
 2f4:	00 00       	bra	@r0		
 2f6:	f0 00       	suba	r0,	r0	
 2f8:	00 00       	bra	@r0		
 2fa:	01 01       	mova	@r1,	r1	
 2fc:	08 00       	mova	@r0,	r8	
 2fe:	00 00       	bra	@r0		
 300:	00 02       	bra	#4		;r2 As==10
 302:	6f 04 00 00 	mova	r4,	&0xf0000
 306:	00 00       	bra	@r0		
 308:	f0 00       	suba	r0,	r0	
 30a:	00 00       	bra	@r0		
 30c:	01 01       	mova	@r1,	r1	
 30e:	08 00       	mova	@r0,	r8	
 310:	00 00       	bra	@r0		
 312:	00 02       	bra	#4		;r2 As==10
 314:	73 04       	.word	0x0473;	????	Illegal as address instr
 316:	00 00       	bra	@r0		
 318:	00 00       	bra	@r0		
 31a:	f0 00       	suba	r0,	r0	
 31c:	00 00       	bra	@r0		
 31e:	01 01       	mova	@r1,	r1	
 320:	08 00       	mova	@r0,	r8	
 322:	00 00       	bra	@r0		
 324:	00 02       	bra	#4		;r2 As==10
 326:	75 04 00 00 	mova	r4,	0(r5)	;0x0000(r5)
 32a:	00 00       	bra	@r0		
 32c:	f0 00       	suba	r0,	r0	
 32e:	00 00       	bra	@r0		
 330:	01 01       	mova	@r1,	r1	
 332:	08 00       	mova	@r0,	r8	
 334:	00 00       	bra	@r0		
 336:	00 02       	bra	#4		;r2 As==10
 338:	77 04 00 00 	mova	r4,	0(r7)	;0x0000(r7)
 33c:	00 00       	bra	@r0		
 33e:	f0 00       	suba	r0,	r0	
 340:	00 00       	bra	@r0		
 342:	01 01       	mova	@r1,	r1	
 344:	08 00       	mova	@r0,	r8	
 346:	00 00       	bra	@r0		
 348:	00 02       	bra	#4		;r2 As==10
 34a:	79 04 00 00 	mova	r4,	0(r9)	;0x0000(r9)
 34e:	00 00       	bra	@r0		
 350:	f0 00       	suba	r0,	r0	
 352:	00 00       	bra	@r0		
 354:	01 01       	mova	@r1,	r1	
 356:	08 00       	mova	@r0,	r8	
 358:	00 00       	bra	@r0		
 35a:	00 02       	bra	#4		;r2 As==10
 35c:	7b 04 00 00 	mova	r4,	0(r11)	;0x0000(r11)
 360:	00 00       	bra	@r0		
 362:	f0 00       	suba	r0,	r0	
 364:	00 00       	bra	@r0		
 366:	01 01       	mova	@r1,	r1	
 368:	08 00       	mova	@r0,	r8	
 36a:	00 00       	bra	@r0		
 36c:	00 02       	bra	#4		;r2 As==10
 36e:	7d 04 00 00 	mova	r4,	0(r13)	;0x0000(r13)
 372:	00 00       	bra	@r0		
 374:	f0 00       	suba	r0,	r0	
 376:	00 00       	bra	@r0		
 378:	01 01       	mova	@r1,	r1	
 37a:	08 00       	mova	@r0,	r8	
 37c:	00 00       	bra	@r0		
 37e:	00 02       	bra	#4		;r2 As==10
 380:	81 04 00 00 	mova	#0x40000,r1	
 384:	00 00       	bra	@r0		
 386:	f0 00       	suba	r0,	r0	
 388:	00 00       	bra	@r0		
 38a:	01 01       	mova	@r1,	r1	
 38c:	08 00       	mova	@r0,	r8	
 38e:	00 00       	bra	@r0		
 390:	00 02       	bra	#4		;r2 As==10
 392:	83 04       	.word	0x0483;	????	Illegal as address instr
 394:	00 00       	bra	@r0		
 396:	00 00       	bra	@r0		
 398:	f0 00       	suba	r0,	r0	
 39a:	00 00       	bra	@r0		
 39c:	01 01       	mova	@r1,	r1	
 39e:	08 00       	mova	@r0,	r8	
 3a0:	00 00       	bra	@r0		
 3a2:	00 02       	bra	#4		;r2 As==10
 3a4:	85 04 00 00 	mova	#0x40000,r5	
 3a8:	00 00       	bra	@r0		
 3aa:	f0 00       	suba	r0,	r0	
 3ac:	00 00       	bra	@r0		
 3ae:	01 01       	mova	@r1,	r1	
 3b0:	08 00       	mova	@r0,	r8	
 3b2:	00 00       	bra	@r0		
 3b4:	00 02       	bra	#4		;r2 As==10
 3b6:	87 04 00 00 	mova	#0x40000,r7	
 3ba:	00 00       	bra	@r0		
 3bc:	f0 00       	suba	r0,	r0	
 3be:	00 00       	bra	@r0		
 3c0:	01 01       	mova	@r1,	r1	
 3c2:	08 00       	mova	@r0,	r8	
 3c4:	00 00       	bra	@r0		
 3c6:	00 02       	bra	#4		;r2 As==10
 3c8:	89 04 00 00 	mova	#0x40000,r9	
 3cc:	00 00       	bra	@r0		
 3ce:	f0 00       	suba	r0,	r0	
 3d0:	00 00       	bra	@r0		
 3d2:	01 01       	mova	@r1,	r1	
 3d4:	08 00       	mova	@r0,	r8	
 3d6:	00 00       	bra	@r0		
 3d8:	00 02       	bra	#4		;r2 As==10
 3da:	8b 04 00 00 	mova	#0x40000,r11	
 3de:	00 00       	bra	@r0		
 3e0:	f0 00       	suba	r0,	r0	
 3e2:	00 00       	bra	@r0		
 3e4:	01 01       	mova	@r1,	r1	
 3e6:	08 00       	mova	@r0,	r8	
 3e8:	00 00       	bra	@r0		
 3ea:	00 02       	bra	#4		;r2 As==10
 3ec:	8d 04 00 00 	mova	#0x40000,r13	
 3f0:	00 00       	bra	@r0		
 3f2:	f0 00       	suba	r0,	r0	
 3f4:	00 00       	bra	@r0		
 3f6:	01 01       	mova	@r1,	r1	
 3f8:	0c 00       	mova	@r0,	r12	
 3fa:	00 00       	bra	@r0		
 3fc:	00 01       	bra	@r1		
 3fe:	06 52       	add	r2,	r6	
 400:	00 00       	bra	@r0		
 402:	00 01       	bra	@r1		
 404:	03 03       	.word	0x0303;	????	Illegal as address instr
 406:	00 00       	bra	@r0		
 408:	0c 00       	mova	@r0,	r12	
 40a:	00 00       	bra	@r0		
 40c:	00 01       	bra	@r1		
 40e:	07 52       	add	r2,	r7	
 410:	00 00       	bra	@r0		
 412:	00 01       	bra	@r1		
 414:	03 03       	.word	0x0303;	????	Illegal as address instr
 416:	00 00       	bra	@r0		
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	59 01       	rram	#1,	r9	
   2:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	6d 00 00 00 	mova	r0,	&0xd0000
}

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	01 01       	mova	@r1,	r1	
   c:	f6 f5 0a 00 	and.b	@r5+,	10(r6)	;0x000a(r6)
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	01 01       	mova	@r1,	r1	
  12:	01 01       	mova	@r1,	r1	
  14:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;   
}
  16:	00 01       	bra	@r1		
  18:	63 3a       	jl	$-824    	;abs 0xfce0
  1a:	5c 6d 73 70 	addc.b	28787(r13),r12	;0x7073(r13)

  1e:	67 63       	addc.b	#2,	r7	;r3 As==10
  20:	63 5c       	.word	0x5c63;	????	Illegal as 2-op instr
void timer_init(void){
  22:	62 69       	addc.b	@r9,	r2	
  24:	6e 5c       	add.b	@r12,	r14	
  26:	2e 2e       	jc	$-930    	;abs 0xfc84
    
  28:	2f 6c       	addc	@r12,	r15	
  2a:	69 62       	addc.b	#4,	r9	;r2 As==10
  2c:	2f 67       	addc	@r7,	r15	
    // timerB
  2e:	63 63       	.word	0x6363;	????	Illegal as 2-op instr
  30:	2f 6d       	addc	@r13,	r15	
  32:	73 70       	.word	0x7073;	????	Illegal as 2-op instr
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	34 33       	jn	$-406    	;abs 0xfe9e
  36:	30 2f       	jc	$-414    	;abs 0xfe98
  38:	34 2e       	jc	$-918    	;abs 0xfca2
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	35 2e       	jc	$-916    	;abs 0xfca6
  3c:	33 2f       	jc	$-408    	;abs 0xfea4
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	2e 2e       	jc	$-930    	;abs 0xfc9c
  40:	2f 2e       	jc	$-928    	;abs 0xfca0
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	2e 2f       	jc	$-418    	;abs 0xfea0
  44:	2e 2e       	jc	$-930    	;abs 0xfca2
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	2f 2e       	jc	$-928    	;abs 0xfca6
  48:	2e 2f       	jc	$-418    	;abs 0xfea6
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	6d 73       	subc.b	#2,	r13	;r3 As==10
  4c:	70 34       	jge	$+226    	;abs 0x12e
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	33 30       	jn	$+104    	;abs 0xb6
  50:	2f 69       	addc	@r9,	r15	
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	6e 63       	addc.b	#2,	r14	;r3 As==10
  54:	6c 75       	subc.b	@r5,	r12	
  56:	64 65       	addc.b	@r5,	r4	
    TBCCR2 = 0; 
  58:	00 00       	bra	@r0		
  5a:	74 69       	addc.b	@r9+,	r4	
  5c:	6d 65       	addc.b	@r5,	r13	
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	72 2e       	jc	$-794    	;abs 0xfd44
  60:	63 00 00 00 	mova	r0,	&0x30000
    TBCCR6 = 0; 
    
  64:	00 6d       	addc	r13,	r0	
  66:	73 70       	.word	0x7073;	????	Illegal as 2-op instr
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  68:	34 33       	jn	$-406    	;abs 0xfed2
  6a:	30 66       	addc	@r6+,	r0	
  6c:	32 36       	jge	$-922    	;abs 0xfcd2
    
    // timerA
  6e:	31 38       	jl	$+100    	;abs 0xd2
  70:	2e 68       	addc	@r8,	r14	
  72:	00 01       	bra	@r1		
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	00 00       	bra	@r0		
  76:	00 00       	bra	@r0		

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	03 02       	.word	0x0203;	????	Illegal as address instr
  7a:	00 00       	bra	@r0		

  7c:	1c 00       	mova	#0x00000,r12	
  7e:	03 02       	.word	0x0203;	????	Illegal as address instr
    // display backlight
  80:	00 00       	bra	@r0		
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  82:	15 00       	mova	#0x00000,r5	
  84:	03 02       	.word	0x0203;	????	Illegal as address instr
  86:	00 00       	bra	@r0		
  88:	15 00       	mova	#0x00000,r5	

    P2SEL |= 0x08;
  8a:	03 02       	.word	0x0203;	????	Illegal as address instr
  8c:	00 00       	bra	@r0		
    P2DIR |= 0x08;
}

  8e:	15 00       	mova	#0x00000,r5	
  90:	03 02       	.word	0x0203;	????	Illegal as address instr
  92:	00 00       	bra	@r0		

  94:	16 00       	mova	#0x00000,r6	
  96:	03 02       	.word	0x0203;	????	Illegal as address instr
  98:	00 00       	bra	@r0		
  9a:	17 00       	mova	#0x00000,r7	
  9c:	03 02       	.word	0x0203;	????	Illegal as address instr
// delay
interrupt (TIMERA1_VECTOR) TIMERA1_ISR_HOOK(void){
  9e:	00 00       	bra	@r0		
  a0:	15 00       	mova	#0x00000,r5	
  a2:	03 02       	.word	0x0203;	????	Illegal as address instr
  a4:	00 00       	bra	@r0		

    if(&interrupt_timer_A != null){
  a6:	16 00       	mova	#0x00000,r6	
  a8:	03 02       	.word	0x0203;	????	Illegal as address instr
        interrupt_timer_A();
    }
    
  aa:	00 00       	bra	@r0		
  ac:	15 00       	mova	#0x00000,r5	
  ae:	03 02       	.word	0x0203;	????	Illegal as address instr
    // apaga o flag da interrupt
  b0:	00 00       	bra	@r0		
  b2:	15 00       	mova	#0x00000,r5	
  b4:	03 02       	.word	0x0203;	????	Illegal as address instr
  b6:	00 00       	bra	@r0		
  b8:	15 00       	mova	#0x00000,r5	
  ba:	03 02       	.word	0x0203;	????	Illegal as address instr
  bc:	00 00       	bra	@r0		
  be:	15 00       	mova	#0x00000,r5	
  c0:	03 02       	.word	0x0203;	????	Illegal as address instr
  c2:	00 00       	bra	@r0		
  c4:	15 00       	mova	#0x00000,r5	
  c6:	03 02       	.word	0x0203;	????	Illegal as address instr
  c8:	00 00       	bra	@r0		
  ca:	16 00       	mova	#0x00000,r6	
  cc:	03 02       	.word	0x0203;	????	Illegal as address instr
  ce:	00 00       	bra	@r0		
  d0:	15 00       	mova	#0x00000,r5	
  d2:	03 02       	.word	0x0203;	????	Illegal as address instr
  d4:	00 00       	bra	@r0		
  d6:	15 00       	mova	#0x00000,r5	
  d8:	03 02       	.word	0x0203;	????	Illegal as address instr
  da:	00 00       	bra	@r0		
  dc:	15 00       	mova	#0x00000,r5	
  de:	03 02       	.word	0x0203;	????	Illegal as address instr
  e0:	00 00       	bra	@r0		
  e2:	15 00       	mova	#0x00000,r5	
  e4:	03 02       	.word	0x0203;	????	Illegal as address instr
  e6:	00 00       	bra	@r0		
  e8:	15 00       	mova	#0x00000,r5	
  ea:	03 02       	.word	0x0203;	????	Illegal as address instr
  ec:	00 00       	bra	@r0		
  ee:	17 00       	mova	#0x00000,r7	
  f0:	03 02       	.word	0x0203;	????	Illegal as address instr
  f2:	00 00       	bra	@r0		
  f4:	15 00       	mova	#0x00000,r5	
  f6:	03 02       	.word	0x0203;	????	Illegal as address instr
  f8:	00 00       	bra	@r0		
  fa:	17 00       	mova	#0x00000,r7	
  fc:	03 02       	.word	0x0203;	????	Illegal as address instr
  fe:	00 00       	bra	@r0		
 100:	16 00       	mova	#0x00000,r6	
 102:	03 02       	.word	0x0203;	????	Illegal as address instr
 104:	00 00       	bra	@r0		
 106:	17 00       	mova	#0x00000,r7	
 108:	03 02       	.word	0x0203;	????	Illegal as address instr
 10a:	00 00       	bra	@r0		
 10c:	16 00       	mova	#0x00000,r6	
 10e:	03 02       	.word	0x0203;	????	Illegal as address instr
 110:	00 00       	bra	@r0		
 112:	15 00       	mova	#0x00000,r5	
 114:	03 02       	.word	0x0203;	????	Illegal as address instr
 116:	00 00       	bra	@r0		
 118:	16 00       	mova	#0x00000,r6	
 11a:	03 02       	.word	0x0203;	????	Illegal as address instr
 11c:	00 00       	bra	@r0		
 11e:	15 00       	mova	#0x00000,r5	
 120:	03 02       	.word	0x0203;	????	Illegal as address instr
 122:	00 00       	bra	@r0		
 124:	15 00       	mova	#0x00000,r5	
 126:	03 02       	.word	0x0203;	????	Illegal as address instr
 128:	00 00       	bra	@r0		
 12a:	18 00       	mova	#0x00000,r8	
 12c:	03 02       	.word	0x0203;	????	Illegal as address instr
 12e:	00 00       	bra	@r0		
 130:	16 00       	mova	#0x00000,r6	
 132:	03 02       	.word	0x0203;	????	Illegal as address instr
 134:	00 00       	bra	@r0		
 136:	17 00       	mova	#0x00000,r7	
 138:	03 02       	.word	0x0203;	????	Illegal as address instr
 13a:	00 00       	bra	@r0		
 13c:	15 00       	mova	#0x00000,r5	
 13e:	03 02       	.word	0x0203;	????	Illegal as address instr
 140:	00 00       	bra	@r0		
 142:	16 00       	mova	#0x00000,r6	
 144:	03 02       	.word	0x0203;	????	Illegal as address instr
 146:	00 00       	bra	@r0		
 148:	16 00       	mova	#0x00000,r6	
 14a:	03 02       	.word	0x0203;	????	Illegal as address instr
 14c:	00 00       	bra	@r0		
 14e:	17 00       	mova	#0x00000,r7	
 150:	03 02       	.word	0x0203;	????	Illegal as address instr
 152:	00 00       	bra	@r0		
 154:	15 00       	mova	#0x00000,r5	
 156:	03 02       	.word	0x0203;	????	Illegal as address instr
 158:	00 00       	bra	@r0		
 15a:	00 01       	bra	@r1		
 15c:	01 04       	Address 0x0000015c is out of bounds.
Address 0x0000015e is out of bounds.
and.b	@r15+,	-1(r15)	;0xffff(r15)

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	0e 00       	mova	@r0,	r14	
   2:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;
   4:	ff ff ff ff 	and.b	@r15+,	-1(r15)	;0xffff(r15)
}
   8:	01 00       	mova	@r0,	r1	

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	01 7e       	subc	r14,	r1	
   c:	00 0c       	bra	@r12		
   e:	01 02       	mova	#4,	r1	;r2 As==10
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	80 01 08 00 	bra	#0x10008	
	...
    interrupt_timer_B = func_timer_B;   
}

  1c:	0a 00       	mova	@r0,	r10	
  1e:	08 00       	mova	@r0,	r8	
	...
void timer_init(void){
    
  28:	78 00 1c 00 	mova	r0,	28(r8)	;0x001c(r8)
	...
    // timerB
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	1c 00       	mova	#0x00000,r12	
  36:	42 0e       	rlam.a	#4,	r2	
  38:	04 42       	mov	r2,	r4	
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	0e 06       	mova	@r6,	r14	
  3c:	42 0e       	rlam.a	#4,	r2	
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	08 42       	mov	r2,	r8	
  40:	0e 0a       	mova	@r10,	r14	
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	8c 05 8d 04 	mova	#0x5048d,r12	
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	8e 03 8f 02 	mova	#0x3028f,r14	
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	1c 00       	mova	#0x00000,r12	
	...
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  54:	1c 00       	mova	#0x00000,r12	
  56:	42 0e       	rlam.a	#4,	r2	
    TBCCR2 = 0; 
  58:	04 42       	mov	r2,	r4	
  5a:	0e 06       	mova	@r6,	r14	
  5c:	42 0e       	rlam.a	#4,	r2	
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	08 42       	mov	r2,	r8	
  60:	0e 0a       	mova	@r10,	r14	
    TBCCR6 = 0; 
    
  62:	8c 05 8d 04 	mova	#0x5048d,r12	
  66:	8e 03 8f 02 	mova	#0x3028f,r14	

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	82 00 84 00 	mova	#0x00084,r2	
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	71 02 84 00 	mova	r2,	132(r1)	;0x0084(r1)
}

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	86 00 02 00 	mova	#0x00002,r6	
   e:	71 04 86 00 	mova	r4,	134(r1)	;0x0086(r1)
void timer_set_interrupt_A(void(*func_timer_A)(void){
  12:	88 00 02 00 	mova	#0x00002,r8	
    interrupt_timer_B = func_timer_B;   
}
  16:	71 06 88 00 	mova	r6,	136(r1)	;0x0088(r1)
  1a:	8a 00 02 00 	mova	#0x00002,r10	

  1e:	71 08 8a 00 	mova	r8,	138(r1)	;0x008a(r1)
void timer_init(void){
  22:	9e 00 02 00 	cmpa	#0x00002,r14	
  26:	71 0a 00 00 	mova	r10,	0(r1)	;0x0000(r1)
    
  2a:	00 00       	bra	@r0		
  2c:	9e 00 a0 00 	cmpa	#0x000a0,r14	
    // timerB
  30:	02 00       	mova	@r0,	r2	
  32:	71 02 a0 00 	mova	r2,	160(r1)	;0x00a0(r1)
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  36:	a2 00 02 00 	adda	#0x00002,r2	
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	71 04 a2 00 	mova	r4,	162(r1)	;0x00a2(r1)
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	a4 00 02 00 	adda	#0x00002,r4	
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	71 06 a4 00 	mova	r6,	164(r1)	;0x00a4(r1)
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  46:	a6 00 02 00 	adda	#0x00002,r6	
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	71 08 a6 00 	mova	r8,	166(r1)	;0x00a6(r1)
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	ba 00 02 00 	suba	#0x00002,r10	
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	71 0a 00 00 	mova	r10,	0(r1)	;0x0000(r1)
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	8c 00 00 00 	mova	#0x00000,r12	
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	00 00       	bra	@r0		
}
   8:	00 00       	bra	@r0		

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	19 04       	mova	@r4+,	r9	
   c:	00 00       	bra	@r0		
   e:	21 00 00 00 	mova	&0x00000,r1	
void timer_set_interrupt_A(void(*func_timer_A)(void){
  12:	74 69       	addc.b	@r9+,	r4	
  14:	6d 65       	addc.b	@r5,	r13	
    interrupt_timer_B = func_timer_B;   
}
  16:	72 5f       	add.b	@r15+,	r2	
  18:	73 65       	.word	0x6573;	????	Illegal as 2-op instr
  1a:	74 5f       	add.b	@r15+,	r4	

  1c:	69 6e       	addc.b	@r14,	r9	
  1e:	74 65       	addc.b	@r5+,	r4	
  20:	72 72       	subc.b	#8,	r2	;r2 As==11
void timer_init(void){
  22:	75 70 74 73 	subc.b	#29556,	r5	;#0x7374
  26:	00 58       	add	r8,	r0	
    
  28:	00 00       	bra	@r0		
  2a:	00 74       	subc	r4,	r0	
  2c:	69 6d       	addc.b	@r13,	r9	
    // timerB
  2e:	65 72       	subc.b	#4,	r5	;r2 As==10
  30:	5f 69 6e 69 	addc.b	26990(r9),r15	;0x696e(r9)
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	74 00 68 00 	mova	r0,	104(r4)	;0x0068(r4)
  38:	00 00       	bra	@r0		
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	54 49 4d 45 	mov.b	17741(r9),r4	;0x454d(r9)
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	52 41 31 5f 	mov.b	24369(r1),r2	;0x5f31(r1)
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	49 53       	add.b	#0,	r9	;r3 As==00
  44:	52 5f 48 4f 	add.b	20296(r15),r2	;0x4f48(r15)
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  48:	4f 4b       	mov.b	r11,	r15	
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	00 79       	subc	r9,	r0	
  4c:	00 00       	bra	@r0		
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	00 54       	add	r4,	r0	
  50:	49 4d       	mov.b	r13,	r9	
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	45 52       	add.b	r2,	r5	
  54:	42 31       	jn	$+646    	;abs 0x2da
  56:	5f 49 53 52 	mov.b	21075(r9),r15	;0x5253(r9)
    TBCCR2 = 0; 
  5a:	5f 48 4f 4f 	mov.b	20303(r8),r15	;0x4f4f(r8)
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	4b 00       	rrcm.a	#1,	r11	
  60:	f8 03       	decda	r8		
    TBCCR6 = 0; 
    
  62:	00 00       	bra	@r0		
  64:	69 6e       	addc.b	@r14,	r9	
  66:	74 65       	addc.b	@r5+,	r4	
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  68:	72 72       	subc.b	#8,	r2	;r2 As==11
  6a:	75 70 74 5f 	subc.b	#24436,	r5	;#0x5f74
    
    // timerA
  6e:	74 69       	addc.b	@r9+,	r4	
  70:	6d 65       	addc.b	@r5,	r13	
  72:	72 5f       	add.b	@r15+,	r2	
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	41 00       	rrcm.a	#1,	r1	
  76:	08 04       	mova	@r4,	r8	

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	00 00       	bra	@r0		
  7a:	69 6e       	addc.b	@r14,	r9	

  7c:	74 65       	addc.b	@r5+,	r4	
  7e:	72 72       	subc.b	#8,	r2	;r2 As==11
    // display backlight
  80:	75 70 74 5f 	subc.b	#24436,	r5	;#0x5f74
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  84:	74 69       	addc.b	@r9+,	r4	
  86:	6d 65       	addc.b	@r5,	r13	
  88:	72 5f       	add.b	@r15+,	r2	

    P2SEL |= 0x08;
  8a:	42 00       	rrcm.a	#1,	r2	
  8c:	00 00       	bra	@r0		
	...

Disassembly of section .debug_pubtypes:

00000000 <.debug_pubtypes>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	0e 00       	mova	@r0,	r14	
   2:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	00 00       	bra	@r0		
}
   8:	00 00       	bra	@r0		

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	19 04       	mova	@r4+,	r9	
   c:	00 00       	bra	@r0		
   e:	00 00       	bra	@r0		
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	10 00       	bra	#0x00000	
   2:	00 00       	bra	@r0		
    interrupt_timer_B = func_timer_B;
   4:	02 00       	mova	@r0,	r2	
   6:	00 00       	bra	@r0		
}
   8:	00 00       	bra	@r0		

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	02 00       	mova	@r0,	r2	
   c:	00 00       	bra	@r0		
   e:	ba 00 00 00 	suba	#0x00000,r10	
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
// ps.: as funcoes passadas para estes ponteiros devem ser inline de preferencia
void(*interrupt_timer_A)(void) = 0;
void(*interrupt_timer_B)(void) = 0;

void timer_set_interrupts(void(*func_timer_A)(void), void(*func_timer_B)(void)){
    interrupt_timer_A = func_timer_A;
   0:	2a 5f       	add	@r15,	r10	
   2:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
    interrupt_timer_B = func_timer_B;
   6:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
}
   8:	4c 36       	jge	$-870    	;abs 0xfca2

void timer_set_interrupt_A(void(*func_timer_A)(void){
   interrupt_timer_A = func_timer_A;
}

   a:	00 66       	addc	r6,	r0	
   c:	75 6e       	addc.b	@r14+,	r5	
   e:	63 5f       	.word	0x5f63;	????	Illegal as 2-op instr
void timer_set_interrupt_A(void(*func_timer_A)(void){
  10:	74 69       	addc.b	@r9+,	r4	
  12:	6d 65       	addc.b	@r5,	r13	
  14:	72 5f       	add.b	@r15+,	r2	
    interrupt_timer_B = func_timer_B;   
}
  16:	41 00       	rrcm.a	#1,	r1	
  18:	66 75       	subc.b	@r5,	r6	
  1a:	6e 63       	addc.b	#2,	r14	;r3 As==10

  1c:	5f 74 69 6d 	subc.b	28009(r4),r15	;0x6d69(r4)
  20:	65 72       	subc.b	#4,	r5	;r2 As==10
void timer_init(void){
  22:	5f 42 00 69 	mov.b	&0x6900,r15	
  26:	6e 74       	subc.b	@r4,	r14	
    
  28:	65 72       	subc.b	#4,	r5	;r2 As==10
  2a:	72 75       	subc.b	@r5+,	r2	
  2c:	70 74       	subc.b	@r4+,	r0	
    // timerB
  2e:	5f 74 69 6d 	subc.b	28009(r4),r15	;0x6d69(r4)
  32:	65 72       	subc.b	#4,	r5	;r2 As==10
    TBCTL = TBCLGRP_0 + CNTL_0 + TBSSEL_1 + ID_3 + MC_1 + TBIE;
  34:	5f 42 00 47 	mov.b	&0x4700,r15	
  38:	4e 55       	add.b	r5,	r14	
    TBCCR0 = TIMER_B_LIMIT; // 400Hz
        
  3a:	20 43       	br	#2		;r3 As==10
  3c:	20 34       	jge	$+66     	;abs 0x7e
    TBCCTL1 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  3e:	2e 35       	jge	$+606    	;abs 0x29c
  40:	2e 33       	jn	$-418    	;abs 0xfe9e
    TBCCTL2 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  42:	00 2a       	jnc	$-1022   	;abs 0xfc44
  44:	5f 5f 54 41 	add.b	16724(r15),r15	;0x4154(r15)
    TBCCTL3 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  48:	43 43       	clr.b	#0		;r3 As==00
    TBCCTL4 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4a:	52 30       	jn	$+166    	;abs 0xf0
  4c:	00 2a       	jnc	$-1022   	;abs 0xfc4e
    TBCCTL5 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;
  4e:	5f 5f 54 41 	add.b	16724(r15),r15	;0x4154(r15)
    TBCCTL6 = CM_0 + CCIS_0 + CLLD_0 + OUTMOD_7;

    TBCCR1 = 0; 
  52:	43 43       	clr.b	#0		;r3 As==00
  54:	52 31       	jn	$+678    	;abs 0x2fa
  56:	00 2a       	jnc	$-1022   	;abs 0xfc58
    TBCCR2 = 0; 
  58:	5f 5f 54 42 	add.b	16980(r15),r15	;0x4254(r15)
  5c:	43 43       	clr.b	#0		;r3 As==00
    TBCCR3 = 0; 
    TBCCR4 = 0; 
    TBCCR5 = 0; 
  5e:	54 4c 34 00 	mov.b	52(r12),r4	;0x0034(r12)
    TBCCR6 = 0; 
    
  62:	50 34       	jge	$+162    	;abs 0x104
  64:	44 49       	mov.b	r9,	r4	
  66:	52 00       	rrcm	#1,	r2	
    /* configura saidas do timerB - P4.1 a P4.6*/
    P4SEL = 0x7E;
    P4DIR = 0x7E;
  68:	75 6e       	addc.b	@r14+,	r5	
  6a:	73 69       	.word	0x6973;	????	Illegal as 2-op instr
  6c:	67 6e       	addc.b	@r14,	r7	
    
    // timerA
  6e:	65 64       	addc.b	@r4,	r5	
  70:	20 69       	addc	@r9,	r0	
  72:	6e 74       	subc.b	@r4,	r14	
    TACCTL0 = CM_0 + CCIS_0 + OUTMOD_0;
  74:	00 74       	subc	r4,	r0	
  76:	69 6d       	addc.b	@r13,	r9	

    TACCR0 = TIMER_A_LIMIT; // 2000Hz
  78:	65 72       	subc.b	#4,	r5	;r2 As==10
  7a:	2e 63       	addc	#2,	r14	;r3 As==10

  7c:	00 50       	rla	r0		
  7e:	34 53       	add	#-1,	r4	;r3 As==11
    // display backlight
  80:	45 4c       	mov.b	r12,	r5	
    TACCTL1 = CM_0 + CCIS_0 + OUTMOD_7;

    TACTL = TASSEL_1 + ID_3 + MC_1 + TAIE;
    TACCR1 = 0;
  82:	00 2a       	jnc	$-1022   	;abs 0xfc84
  84:	5f 5f 50 34 	add.b	13392(r15),r15	;0x3450(r15)
  88:	44 49       	mov.b	r9,	r4	

    P2SEL |= 0x08;
  8a:	52 00       	rrcm	#1,	r2	
  8c:	74 69       	addc.b	@r9+,	r4	
    P2DIR |= 0x08;
}

  8e:	6d 65       	addc.b	@r5,	r13	
  90:	72 5f       	add.b	@r15+,	r2	
  92:	69 6e       	addc.b	@r14,	r9	

  94:	69 74       	subc.b	@r4,	r9	
  96:	00 75       	subc	r5,	r0	
  98:	6e 73       	subc.b	#2,	r14	;r3 As==10
  9a:	69 67       	addc.b	@r7,	r9	
  9c:	6e 65       	addc.b	@r5,	r14	
// delay
interrupt (TIMERA1_VECTOR) TIMERA1_ISR_HOOK(void){
  9e:	64 20       	jnz	$+202    	;abs 0x168
  a0:	63 68       	.word	0x6863;	????	Illegal as 2-op instr
  a2:	61 72       	subc.b	#4,	r1	;r2 As==10
  a4:	00 2a       	jnc	$-1022   	;abs 0xfca6

    if(&interrupt_timer_A != null){
  a6:	5f 5f 50 34 	add.b	13392(r15),r15	;0x3450(r15)
        interrupt_timer_A();
    }
    
  aa:	53 45       	.word	0x4553;	????	Illegal as 2-op instr
  ac:	4c 00       	rrcm.a	#1,	r12	
  ae:	2a 5f       	add	@r15,	r10	
    // apaga o flag da interrupt
  b0:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  b4:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  b6:	30 00 2a 5f 	bra	0x5f2a		;PC rel. 0x05fe2
  ba:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  be:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  c0:	31 00 2a 5f 	mova	0x5f2a,	r1	;PC rel. 0x05fec
  c4:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  c8:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  ca:	32 00 2a 5f 	mova	0x5f2a,	r2	;PC rel. 0x05ff6
  ce:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  d2:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  d4:	33 00       	.word	0x0033;	????	Illegal as address instr
  d6:	2a 5f       	add	@r15,	r10	
  d8:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  dc:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  de:	34 00 2a 5f 	mova	0x5f2a,	r4	;PC rel. 0x0600a
  e2:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  e6:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  e8:	35 00 2a 5f 	mova	0x5f2a,	r5	;PC rel. 0x06014
  ec:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
  f0:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
  f2:	36 00 2a 5f 	mova	0x5f2a,	r6	;PC rel. 0x0601e
  f6:	5f 54 41 43 	add.b	17217(r4),r15	;0x4341(r4)
  fa:	54 4c 00 54 	mov.b	21504(r12),r4	;0x5400(r12)
  fe:	41 43       	clr.b	r1		
 100:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 102:	4c 30       	jn	$+154    	;abs 0x19c
 104:	00 54       	add	r4,	r0	
 106:	41 43       	clr.b	r1		
 108:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 10a:	4c 31       	jn	$+666    	;abs 0x3a4
 10c:	00 54       	add	r4,	r0	
 10e:	42 43       	clr.b	r2		
 110:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
 112:	34 00 54 42 	mova	0x4254,	r4	;PC rel. 0x04368
 116:	43 43       	clr.b	#0		;r3 As==00
 118:	52 35       	jge	$+678    	;abs 0x3be
 11a:	00 54       	add	r4,	r0	
 11c:	42 43       	clr.b	r2		
 11e:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
 120:	36 00 54 42 	mova	0x4254,	r6	;PC rel. 0x04376
 124:	43 43       	clr.b	#0		;r3 As==00
 126:	54 4c 33 00 	mov.b	51(r12),r4	;0x0033(r12)
 12a:	54 42 43 54 	mov.b	&0x5443,r4	
 12e:	4c 00       	rrcm.a	#1,	r12	
 130:	54 42 43 43 	mov.b	&0x4343,r4	
 134:	54 4c 34 00 	mov.b	52(r12),r4	;0x0034(r12)
 138:	74 69       	addc.b	@r9+,	r4	
 13a:	6d 65       	addc.b	@r5,	r13	
 13c:	72 5f       	add.b	@r15+,	r2	
 13e:	73 65       	.word	0x6573;	????	Illegal as 2-op instr
 140:	74 5f       	add.b	@r15+,	r4	
 142:	69 6e       	addc.b	@r14,	r9	
 144:	74 65       	addc.b	@r5+,	r4	
 146:	72 72       	subc.b	#8,	r2	;r2 As==11
 148:	75 70 74 73 	subc.b	#29556,	r5	;#0x7374
 14c:	00 54       	add	r4,	r0	
 14e:	49 4d       	mov.b	r13,	r9	
 150:	45 52       	add.b	r2,	r5	
 152:	42 31       	jn	$+646    	;abs 0x3d8
 154:	5f 49 53 52 	mov.b	21075(r9),r15	;0x5253(r9)
 158:	5f 48 4f 4f 	mov.b	20303(r8),r15	;0x4f4f(r8)
 15c:	4b 00       	rrcm.a	#1,	r11	
 15e:	2a 5f       	add	@r15,	r10	
 160:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
 164:	54 4c 00 54 	mov.b	21504(r12),r4	;0x5400(r12)
 168:	42 43       	clr.b	r2		
 16a:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 16c:	4c 31       	jn	$+666    	;abs 0x406
 16e:	00 54       	add	r4,	r0	
 170:	42 43       	clr.b	r2		
 172:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 174:	4c 32       	jn	$-870    	;abs 0xfe0e
 176:	00 54       	add	r4,	r0	
 178:	41 43       	clr.b	r1		
 17a:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
 17c:	30 00 54 41 	bra	0x4154		;PC rel. 0x042d2
 180:	43 43       	clr.b	#0		;r3 As==00
 182:	52 31       	jn	$+678    	;abs 0x428
 184:	00 54       	add	r4,	r0	
 186:	42 43       	clr.b	r2		
 188:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 18a:	4c 35       	jge	$+666    	;abs 0x424
 18c:	00 54       	add	r4,	r0	
 18e:	42 43       	clr.b	r2		
 190:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 192:	4c 36       	jge	$-870    	;abs 0xfe2c
 194:	00 2a       	jnc	$-1022   	;abs 0xfd96
 196:	5f 5f 54 41 	add.b	16724(r15),r15	;0x4154(r15)
 19a:	43 43       	clr.b	#0		;r3 As==00
 19c:	54 4c 30 00 	mov.b	48(r12),r4	;0x0030(r12)
 1a0:	2a 5f       	add	@r15,	r10	
 1a2:	5f 54 41 43 	add.b	17217(r4),r15	;0x4341(r4)
 1a6:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 1a8:	4c 31       	jn	$+666    	;abs 0x442
 1aa:	00 50       	rla	r0		
 1ac:	32 44       	mov	@r4+,	r2	
 1ae:	49 52       	add.b	r2,	r9	
 1b0:	00 50       	rla	r0		
 1b2:	32 53       	add	#-1,	r2	;r3 As==11
 1b4:	45 4c       	mov.b	r12,	r5	
 1b6:	00 54       	add	r4,	r0	
 1b8:	41 43       	clr.b	r1		
 1ba:	54 4c 00 2a 	mov.b	10752(r12),r4	;0x2a00(r12)
 1be:	5f 5f 50 32 	add.b	12880(r15),r15	;0x3250(r15)
 1c2:	44 49       	mov.b	r9,	r4	
 1c4:	52 00       	rrcm	#1,	r2	
 1c6:	69 6e       	addc.b	@r14,	r9	
 1c8:	74 65       	addc.b	@r5+,	r4	
 1ca:	72 72       	subc.b	#8,	r2	;r2 As==11
 1cc:	75 70 74 5f 	subc.b	#24436,	r5	;#0x5f74
 1d0:	74 69       	addc.b	@r9+,	r4	
 1d2:	6d 65       	addc.b	@r5,	r13	
 1d4:	72 5f       	add.b	@r15+,	r2	
 1d6:	41 00       	rrcm.a	#1,	r1	
 1d8:	54 49 4d 45 	mov.b	17741(r9),r4	;0x454d(r9)
 1dc:	52 41 31 5f 	mov.b	24369(r1),r2	;0x5f31(r1)
 1e0:	49 53       	add.b	#0,	r9	;r3 As==00
 1e2:	52 5f 48 4f 	add.b	20296(r15),r2	;0x4f48(r15)
 1e6:	4f 4b       	mov.b	r11,	r15	
 1e8:	00 2a       	jnc	$-1022   	;abs 0xfdea
 1ea:	5f 5f 50 32 	add.b	12880(r15),r15	;0x3250(r15)
 1ee:	53 45       	.word	0x4553;	????	Illegal as 2-op instr
 1f0:	4c 00       	rrcm.a	#1,	r12	
 1f2:	54 42 43 43 	mov.b	&0x4343,r4	
 1f6:	52 30       	jn	$+166    	;abs 0x29c
 1f8:	00 54       	add	r4,	r0	
 1fa:	42 43       	clr.b	r2		
 1fc:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
 1fe:	31 00 54 42 	mova	0x4254,	r1	;PC rel. 0x04454
 202:	43 43       	clr.b	#0		;r3 As==00
 204:	52 32       	jn	$-858    	;abs 0xfeaa
 206:	00 54       	add	r4,	r0	
 208:	42 43       	clr.b	r2		
 20a:	43 52       	.word	0x5243;	????	Illegal as 2-op instr
 20c:	33 00       	.word	0x0033;	????	Illegal as address instr
 20e:	2a 5f       	add	@r15,	r10	
 210:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
 214:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 216:	4c 31       	jn	$+666    	;abs 0x4b0
 218:	00 2a       	jnc	$-1022   	;abs 0xfe1a
 21a:	5f 5f 54 42 	add.b	16980(r15),r15	;0x4254(r15)
 21e:	43 43       	clr.b	#0		;r3 As==00
 220:	54 4c 32 00 	mov.b	50(r12),r4	;0x0032(r12)
 224:	2a 5f       	add	@r15,	r10	
 226:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
 22a:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 22c:	4c 33       	jn	$-358    	;abs 0xc6
 22e:	00 43       	clr	r0		
 230:	3a 5c       	add	@r12+,	r10	
 232:	55 73       	subc.b	#1,	r5	;r3 As==01
 234:	65 72       	subc.b	#4,	r5	;r2 As==10
 236:	73 5c       	.word	0x5c73;	????	Illegal as 2-op instr
 238:	66 6c       	addc.b	@r12,	r6	
 23a:	61 76       	subc.b	@r6,	r1	
 23c:	69 6f       	addc.b	@r15,	r9	
 23e:	68 70       	subc.b	@r0,	r8	
 240:	6f 5c       	add.b	@r12,	r15	
 242:	44 65       	addc.b	r5,	r4	
 244:	73 6b       	.word	0x6b73;	????	Illegal as 2-op instr
 246:	74 6f       	addc.b	@r15+,	r4	
 248:	70 5c       	add.b	@r12+,	r0	
 24a:	6d 69       	addc.b	@r9,	r13	
 24c:	6e 69       	addc.b	@r9,	r14	
 24e:	71 75       	subc.b	@r5+,	r1	
 250:	61 64       	addc.b	@r4,	r1	
 252:	5c 6d 69 6e 	addc.b	28265(r13),r12	;0x6e69(r13)
 256:	69 71       	subc.b	@r1,	r9	
 258:	75 61       	addc.b	@r1+,	r5	
 25a:	64 5c       	add.b	@r12,	r4	
 25c:	6d 69       	addc.b	@r9,	r13	
 25e:	6e 71       	subc.b	@r1,	r14	
 260:	75 61       	addc.b	@r1+,	r5	
 262:	64 56       	add.b	@r6,	r4	
 264:	32 2e       	jc	$-922    	;abs 0xfeca
 266:	30 00 2a 5f 	bra	0x5f2a		;PC rel. 0x06192
 26a:	5f 54 42 43 	add.b	17218(r4),r15	;0x4342(r4)
 26e:	43 54       	.word	0x5443;	????	Illegal as 2-op instr
 270:	4c 35       	jge	$+666    	;abs 0x50a
	...
